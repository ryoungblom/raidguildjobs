{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/pages/countries.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Web3 from 'web3';\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js';\nimport Country from '../components/countries.js';\n\nclass Countries extends Component {\n  async componentWillMount() {\n    await this.runWeb3();\n    await this.blockchain();\n    await this.getData();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"react-web3\";\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      countries: [],\n      loading: true\n    };\n  }\n\n  async isInstalled() {\n    if (typeof Web3 !== 'undefined') {\n      console.log('Web3 Provider is installed');\n    } else {\n      console.log('No Web3 Provider!');\n    }\n  }\n\n  async isLocked(web3) {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        console.log(err);\n      } else if (accounts.length === 0) {\n        console.log('Web3 Provider is locked');\n      } else {\n        console.log('Web3 Provider is unlocked');\n      }\n    });\n  }\n\n  async runWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!');\n    }\n  }\n\n  async blockchain() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    this.isInstalled();\n    this.isLocked(web3);\n    const countries = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS);\n    this.setState({\n      countries\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceInWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceInWei / 1000000000000000000;\n    var account = accounts[0];\n    console.log(\"Account: \" + account);\n    console.log(\"Balance: \" + balance);\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      loading: false\n    });\n  }\n\n  async getData() {\n    var countryCount = await this.state.countries.methods.countryCount().call();\n    const singleCountry = await this.state.countries.methods.countries(i).call();\n    console.log(\"Country: \" + singleCountry);\n    this.setState({\n      countries: [...this.state.countries, singleCountry]\n    });\n\n    for (var i = countryCount - 1; i >= 0; i--) {\n      const singleCountry = await this.countries.methods.countries(i).call();\n      this.setState({\n        countries: [...this.state.countries, singleCountry]\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Countries;","map":{"version":3,"sources":["/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/pages/countries.js"],"names":["React","Component","Web3","COUNTRY_ABI","COUNTRY_ADDRESS","Country","Countries","componentWillMount","runWeb3","blockchain","getData","forceUpdate","componentDidMount","document","title","componentWillUnmount","clearInterval","interval","constructor","props","state","account","balance","countries","loading","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","window","ethereum","enable","currentProvider","alert","givenProvider","Contract","setState","balanceInWei","getBalance","countryCount","methods","call","singleCountry","i","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Web3 from 'web3'\n\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js'\n\nimport Country from '../components/countries.js'\n\nclass Countries extends Component {\n\n  async componentWillMount() {\n    await this.runWeb3()\n    await this.blockchain()\n    await this.getData()\n    this.forceUpdate()\n  }\n\n\n  componentDidMount(){\n    document.title = \"react-web3\"\n  }\n\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      countries: [],\n      loading: true\n    }\n  }\n\n\n  async isInstalled() {\n     if (typeof Web3 !== 'undefined'){\n        console.log('Web3 Provider is installed')\n     }\n     else{\n        console.log('No Web3 Provider!')\n     }\n  }\n\n  async isLocked(web3) {\n     web3.eth.getAccounts(function(err, accounts){\n        if (err != null) {\n           console.log(err)\n        }\n        else if (accounts.length === 0) {\n           console.log('Web3 Provider is locked')\n        }\n        else {\n           console.log('Web3 Provider is unlocked')\n        }\n     });\n  }\n\n\n  async runWeb3() {\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!')\n    }\n  }\n\n\n  async blockchain() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    this.isInstalled();\n    this.isLocked(web3);\n\n    const countries = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS)\n\n    this.setState({ countries })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceInWei = await web3.eth.getBalance(accounts[0])\n    var balance = balanceInWei/1000000000000000000\n    var account = accounts[0]\n\n    console.log(\"Account: \" + account)\n    console.log(\"Balance: \" + balance)\n\n    this.setState({ account: accounts[0], balance: balance, loading: false })\n  }\n\n\n  async getData() {\n\n    var countryCount = await this.state.countries.methods.countryCount().call()\n\n    const singleCountry = await this.state.countries.methods.countries(i).call()\n\n    console.log(\"Country: \" + singleCountry)\n\n    this.setState({\n      countries: [...this.state.countries, singleCountry]\n    })\n\n\n    for (var i = countryCount-1; i >= 0; i--) {\n      const singleCountry = await this.countries.methods.countries(i).call()\n      this.setState({\n        countries: [...this.state.countries, singleCountry]\n      })\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}