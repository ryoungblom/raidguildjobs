{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/work/react-web3/react-web3/src/components/ethereum.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\n\nfunction isInstalled() {\n  if (typeof Web3 !== 'undefined') {\n    console.log('Web3 Provider is installed');\n  } else {\n    console.log('No Web3 Provider!');\n  }\n}\n\nfunction isLocked(web3) {\n  web3.eth.getAccounts(function (err, accounts) {\n    if (err != null) {\n      console.log(err);\n    } else if (accounts.length === 0) {\n      console.log('Web3 Provider is locked');\n    } else {\n      console.log('Web3 Provider is unlocked');\n    }\n  });\n}\n\nclass Eth extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"react-web3\";\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      loading: true\n    };\n    this.createThought = this.createThought.bind(this);\n    this.changeHandle = this.changeHandle.bind(this);\n    this.getOwnHandle = this.getOwnHandle.bind(this);\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    isInstalled();\n    isLocked(web3);\n    const accounts = await web3.eth.getAccounts();\n    const balanceInWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceInWei / 1000000000000000000;\n    var account = accounts[0];\n    this.setState({\n      account: accounts[0],\n      balance: balance\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Eth;","map":{"version":3,"sources":["/Users/reuben/Desktop/work/react-web3/react-web3/src/components/ethereum.js"],"names":["React","Component","Web3","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","Eth","componentWillMount","loadWeb3","loadBlockchainData","forceUpdate","componentDidMount","document","title","componentWillUnmount","clearInterval","interval","constructor","props","state","account","balance","myString","loading","createThought","bind","changeHandle","getOwnHandle","window","ethereum","enable","currentProvider","alert","givenProvider","balanceInWei","getBalance","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\n\n\nfunction isInstalled() {\n   if (typeof Web3 !== 'undefined'){\n      console.log('Web3 Provider is installed')\n   }\n   else{\n      console.log('No Web3 Provider!')\n   }\n}\n\nfunction isLocked(web3) {\n   web3.eth.getAccounts(function(err, accounts){\n      if (err != null) {\n         console.log(err)\n      }\n      else if (accounts.length === 0) {\n         console.log('Web3 Provider is locked')\n      }\n      else {\n         console.log('Web3 Provider is unlocked')\n      }\n   });\n}\n\n\nclass Eth extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    this.forceUpdate()\n  }\n\n\n  componentDidMount(){\n    document.title = \"react-web3\"\n  }\n\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      loading: true\n    }\n\n    this.createThought = this.createThought.bind(this)\n    this.changeHandle = this.changeHandle.bind(this)\n    this.getOwnHandle = this.getOwnHandle.bind(this)\n  }\n\n\n  async loadWeb3() {\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!')\n    }\n  }\n\n\n\n  async loadBlockchainData() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    isInstalled();\n    isLocked(web3);\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceInWei = await web3.eth.getBalance(accounts[0])\n    var balance = balanceInWei/1000000000000000000\n    var account = accounts[0]\n\n    this.setState({ account: accounts[0], balance: balance })\n    this.setState({ loading: false })\n\n  }\n\n\n\n\n  render() {\n    return (\n\n      <br />\n\n    );\n  }\n}\n\nexport default Eth;\n"]},"metadata":{},"sourceType":"module"}