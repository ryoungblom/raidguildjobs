{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/pages/countries.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Web3 from 'web3';\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js';\nimport Country from '../components/countries.js';\n\nclass Countries extends Component {\n  async componentWillMount() {\n    await this.runWeb3();\n    await this.blockchain();\n    await this.getData();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"react-web3\";\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      countries: [],\n      headers: [\"ID\", \"name\", \"CO2\", \"CO2\", \"Env\", \"Env\", \"Env\"],\n      loading: true\n    };\n    this.renderTableData = this.renderTableData.bind(this);\n    this.renderTableHeader = this.renderTableHeader.bind(this);\n  }\n\n  async isInstalled() {\n    if (typeof Web3 !== 'undefined') {\n      console.log('Web3 Provider is installed');\n    } else {\n      console.log('No Web3 Provider!');\n    }\n  }\n\n  async isLocked(web3) {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        console.log(err);\n      } else if (accounts.length === 0) {\n        console.log('Web3 Provider is locked');\n      } else {\n        console.log('Web3 Provider is unlocked');\n      }\n    });\n  }\n\n  async runWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!');\n    }\n  }\n\n  async blockchain() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    this.isInstalled();\n    this.isLocked(web3);\n    const countryData = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS);\n    this.setState({\n      countryData\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceInWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceInWei / 1000000000000000000;\n    var account = accounts[0];\n    console.log(\"Account: \" + account);\n    console.log(\"Balance: \" + balance);\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      loading: false\n    });\n  }\n\n  async getData() {\n    var countryCount = await this.state.countryData.methods.countryCount().call();\n    const singleCountry = await this.state.countryData.methods.countries(0).call();\n    this.setState({\n      countries: [...this.state.countries, singleCountry]\n    });\n    /*\n        for (var i = countryCount-1; i >= 0; i--) {\n          const singleCountry = await this.state.countries.methods.countries(i).call()\n          this.setState({\n            countries: [...this.state.countries, singleCountry]\n          })\n        }\n    */\n  }\n\n  renderTableData() {\n    return this.state.countries.map((eachCountry, index) => {\n      const {\n        id,\n        country,\n        totalCO2,\n        perCapCO2,\n        envPerfIndex,\n        envHealth,\n        ecoVitality\n      } = eachCountry; //destructuring\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, country), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, totalCO2), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, perCapCO2), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, envPerfIndex), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, envHealth), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, ecoVitality));\n    });\n  }\n  /*\n     async renderTableHeader() {\n        let header = Object.keys(this.state.headers)\n        return header.map((key, index) => {\n           return <th key={index}>{key.toUpperCase()}</th>\n        })\n     }\n     */\n\n\n  renderTableHeader() {\n    return this.state.headers.map((label, index) => {\n      return React.createElement(\"th\", {\n        key: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, label.toUpperCase());\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Carbon Data by Country\"), React.createElement(\"table\", {\n      id: \"countries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData())))));\n  }\n\n}\n\nexport default Countries;","map":{"version":3,"sources":["/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/pages/countries.js"],"names":["React","Component","Web3","COUNTRY_ABI","COUNTRY_ADDRESS","Country","Countries","componentWillMount","runWeb3","blockchain","getData","forceUpdate","componentDidMount","document","title","componentWillUnmount","clearInterval","interval","constructor","props","state","account","balance","countries","headers","loading","renderTableData","bind","renderTableHeader","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","window","ethereum","enable","currentProvider","alert","givenProvider","countryData","Contract","setState","balanceInWei","getBalance","countryCount","methods","call","singleCountry","map","eachCountry","index","id","country","totalCO2","perCapCO2","envPerfIndex","envHealth","ecoVitality","label","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Web3 from 'web3'\n\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js'\n\nimport Country from '../components/countries.js'\n\nclass Countries extends Component {\n\n  async componentWillMount() {\n    await this.runWeb3()\n    await this.blockchain()\n    await this.getData()\n    this.forceUpdate()\n  }\n\n\n  componentDidMount(){\n    document.title = \"react-web3\"\n  }\n\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      countries: [],\n      headers: [\"ID\", \"name\", \"CO2\", \"CO2\", \"Env\", \"Env\", \"Env\"],\n      loading: true\n    }\n\n    this.renderTableData = this.renderTableData.bind(this)\n    this.renderTableHeader = this.renderTableHeader.bind(this)\n  }\n\n\n  async isInstalled() {\n     if (typeof Web3 !== 'undefined'){\n        console.log('Web3 Provider is installed')\n     }\n     else{\n        console.log('No Web3 Provider!')\n     }\n  }\n\n  async isLocked(web3) {\n     web3.eth.getAccounts(function(err, accounts){\n        if (err != null) {\n           console.log(err)\n        }\n        else if (accounts.length === 0) {\n           console.log('Web3 Provider is locked')\n        }\n        else {\n           console.log('Web3 Provider is unlocked')\n        }\n     });\n  }\n\n\n  async runWeb3() {\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!')\n    }\n  }\n\n\n  async blockchain() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    this.isInstalled();\n    this.isLocked(web3);\n\n    const countryData = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS)\n\n    this.setState({ countryData })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceInWei = await web3.eth.getBalance(accounts[0])\n    var balance = balanceInWei/1000000000000000000\n    var account = accounts[0]\n\n    console.log(\"Account: \" + account)\n    console.log(\"Balance: \" + balance)\n\n    this.setState({ account: accounts[0], balance: balance, loading: false })\n  }\n\n\n  async getData() {\n\n    var countryCount = await this.state.countryData.methods.countryCount().call()\n\n    const singleCountry = await this.state.countryData.methods.countries(0).call()\n\n    this.setState({\n      countries: [...this.state.countries, singleCountry]\n    })\n\n/*\n    for (var i = countryCount-1; i >= 0; i--) {\n      const singleCountry = await this.state.countries.methods.countries(i).call()\n      this.setState({\n        countries: [...this.state.countries, singleCountry]\n      })\n    }\n*/\n\n  }\n\n  renderTableData() {\n      return this.state.countries.map((eachCountry, index) => {\n         const { id, country, totalCO2, perCapCO2, envPerfIndex, envHealth, ecoVitality } = eachCountry //destructuring\n         return (\n            <tr key={id}>\n               <td>{id}</td>\n               <td>{country}</td>\n               <td>{totalCO2}</td>\n               <td>{perCapCO2}</td>\n               <td>{envPerfIndex}</td>\n               <td>{envHealth}</td>\n               <td>{ecoVitality}</td>\n            </tr>\n         )\n      })\n   }\n\n/*\n   async renderTableHeader() {\n      let header = Object.keys(this.state.headers)\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n   */\n\n   renderTableHeader() {\n      return this.state.headers.map((label, index) => {\n         return <th key={label}>{label.toUpperCase()}</th>\n      })\n   }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n        <div>\n          <h1 id='title'>Carbon Data by Country</h1>\n          <table id='countries'>\n            <tbody>\n              <tr>{this.renderTableHeader()}</tr>\n                {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n\n{/*\n        <ul>\n\n\n          { this.state.countries.map((country, key) => {\n            return(\n              <div key={key}>\n\n\n                <div>\n                  <h1 id='title'>Carbon Data by Country</h1>\n                  <table id='countries'>\n                    <tbody>\n                      <tr>{this.renderTableHeader()}</tr>\n                        {this.renderTableData()}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div>\n                  <span>@{country.id}</span>\n                  <p>{country.country}</p>\n                  <p>{country.totalCO2}</p>\n                  <p>{country.perCapCO2}</p>\n                  <p>{country.envPerfIndex}</p>\n                  <p>{country.envHealth}</p>\n                  <p>{country.ecoVitality}</p>\n                </div>\n              </div>\n            )\n          })}\n        </ul>\n\n*/}\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}