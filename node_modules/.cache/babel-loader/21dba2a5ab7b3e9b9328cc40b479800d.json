{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/components/addCountry.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js';\n\nclass NewCountry extends Component {\n  async componentWillMount() {\n    await this.runWeb3();\n    await this.blockchain();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"react-web3\";\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      loading: true\n    };\n    this.addData = this.addData.bind(this);\n  }\n\n  async isInstalled() {\n    if (typeof Web3 !== 'undefined') {\n      console.log('Web3 Provider is installed');\n    } else {\n      console.log('No Web3 Provider!');\n    }\n  }\n\n  async isLocked(web3) {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        console.log(err);\n      } else if (accounts.length === 0) {\n        console.log('Web3 Provider is locked');\n      } else {\n        console.log('Web3 Provider is unlocked');\n      }\n    });\n  }\n\n  async runWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!');\n    }\n  }\n\n  async blockchain() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    this.isInstalled();\n    this.isLocked(web3);\n    const countryData = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS);\n    this.setState({\n      countryData\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceInWei = await web3.eth.getBalance(accounts[0]);\n    var balance = balanceInWei / 1000000000000000000;\n    var account = accounts[0];\n    console.log(\"Account: \" + account);\n    console.log(\"Balance: \" + balance);\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      loading: false\n    });\n  }\n\n  addData(name) {\n    this.state.countryData.methods.addCountry(name, 65, 64, 63, 62, 61).send({\n      from: this.state.account\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"formDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"thoughtForm\",\n      onSubmit: event => {\n        event.preventDefault();\n        this.addData(this.newName.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"infoFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \\xA0 \"), React.createElement(\"span\", {\n      className: \"acctBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Account: \", this.state.account), React.createElement(\"span\", {\n      className: \"handBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Balance: @\", this.state.balance), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" \\xA0 \")), React.createElement(\"input\", {\n      ref: input => this.newName = input,\n      type: \"text\",\n      className: \"thoughtBox\",\n      placeholder: \"Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default NewCountry;","map":{"version":3,"sources":["/Users/reuben/Desktop/work/blueVista/ethereum/climateth/src/components/addCountry.js"],"names":["React","Component","Web3","COUNTRY_ABI","COUNTRY_ADDRESS","NewCountry","componentWillMount","runWeb3","blockchain","forceUpdate","componentDidMount","document","title","componentWillUnmount","clearInterval","interval","constructor","props","state","account","balance","loading","addData","bind","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","window","ethereum","enable","currentProvider","alert","givenProvider","countryData","Contract","setState","balanceInWei","getBalance","name","methods","addCountry","send","from","render","event","preventDefault","newName","value","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\n\nimport { COUNTRY_ABI, COUNTRY_ADDRESS } from '../config.js'\n\n\nclass NewCountry extends Component {\n\n  async componentWillMount() {\n    await this.runWeb3()\n    await this.blockchain()\n    this.forceUpdate()\n  }\n\n\n  componentDidMount(){\n    document.title = \"react-web3\"\n  }\n\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      loading: true\n    }\n\n    this.addData = this.addData.bind(this)\n  }\n\n\n  async isInstalled() {\n     if (typeof Web3 !== 'undefined'){\n        console.log('Web3 Provider is installed')\n     }\n     else{\n        console.log('No Web3 Provider!')\n     }\n  }\n\n  async isLocked(web3) {\n     web3.eth.getAccounts(function(err, accounts){\n        if (err != null) {\n           console.log(err)\n        }\n        else if (accounts.length === 0) {\n           console.log('Web3 Provider is locked')\n        }\n        else {\n           console.log('Web3 Provider is unlocked')\n        }\n     });\n  }\n\n\n  async runWeb3() {\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Please install MetaMask or similar!')\n    }\n  }\n\n\n  async blockchain() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    this.isInstalled();\n    this.isLocked(web3);\n\n    const countryData = new web3.eth.Contract(COUNTRY_ABI, COUNTRY_ADDRESS)\n\n    this.setState({ countryData })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceInWei = await web3.eth.getBalance(accounts[0])\n    var balance = balanceInWei/1000000000000000000\n    var account = accounts[0]\n\n    console.log(\"Account: \" + account)\n    console.log(\"Balance: \" + balance)\n\n    this.setState({ account: accounts[0], balance: balance, loading: false })\n  }\n\n\n   addData(name) {\n     this.state.countryData.methods.addCountry(name, 65, 64, 63, 62, 61).send({ from: this.state.account })\n   }\n\n\n  render() {\n    return (\n\n      <div className = \"formDiv\">\n\n        <form className = \"thoughtForm\" onSubmit={(event) => {\n          event.preventDefault()\n          this.addData(this.newName.value)\n        }}>\n        <div class = \"infoFlex\">\n        <span> &nbsp; </span>\n          <span className=\"acctBalance\">Account: {this.state.account}</span>\n          <span className=\"handBalance\">Balance: @{this.state.balance}</span>\n          <span> &nbsp; </span>\n        </div>\n          <input ref={(input) => this.newName = input} type=\"text\" className=\"thoughtBox\" placeholder=\"Name\" required />\n          <br />\n            <input type=\"submit\" hidden={false} />\n        </form>\n\n        <hr/>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default NewCountry;\n"]},"metadata":{},"sourceType":"module"}